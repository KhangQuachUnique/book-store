<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/main/java/model/Promotion.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/model/Promotion.java" />
              <option name="originalContent" value="package model;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;import java.sql.Timestamp;&#10;import java.util.List;&#10;&#10;@Data&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;promotions&quot;)&#10;public class Promotion {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @Column(name = &quot;code&quot;, unique = true, nullable = false)&#10;    private String code;&#10;&#10;    @Column(name = &quot;discount&quot;)&#10;    private double discount;&#10;&#10;    @Column(name = &quot;expireAt&quot;)&#10;    private Timestamp expireAt;&#10;&#10;    // Relationships&#10;    @OneToMany(mappedBy = &quot;promotion&quot;, cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)&#10;    private List&lt;Order&gt; orders;&#10;}" />
              <option name="updatedContent" value="package model;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;import java.sql.Timestamp;&#10;import java.util.List;&#10;&#10;@Data&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;\&quot;promotions\&quot;&quot;)&#10;public class Promotion {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    @Column(name = &quot;\&quot;id\&quot;&quot;)&#10;    private Long id;&#10;&#10;    @Column(name = &quot;\&quot;code\&quot;&quot;, unique = true, nullable = false)&#10;    private String code;&#10;&#10;    @Column(name = &quot;\&quot;discount\&quot;&quot;)&#10;    private double discount;&#10;&#10;    @Column(name = &quot;\&quot;expireAt\&quot;&quot;)&#10;    private Timestamp expireAt;&#10;&#10;    // Relationships&#10;    @OneToMany(mappedBy = &quot;promotion&quot;, cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)&#10;    private List&lt;Order&gt; orders;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/model/Wishlist.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/model/Wishlist.java" />
              <option name="originalContent" value="package model;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;import java.util.List;&#10;&#10;@Data&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;wishlists&quot;)&#10;public class Wishlist {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    // Relationships&#10;    @OneToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;\&quot;userId\&quot;&quot;, nullable = false)&#10;    private User user;&#10;&#10;    @OneToMany(mappedBy = &quot;wishlist&quot;, cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)&#10;    private List&lt;WishlistItem&gt; items;&#10;}" />
              <option name="updatedContent" value="package model;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;import java.util.List;&#10;&#10;@Data&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;\&quot;wishlists\&quot;&quot;)&#10;public class Wishlist {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    // Relationships&#10;    @OneToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;\&quot;userId\&quot;&quot;, nullable = false)&#10;    private User user;&#10;&#10;    @OneToMany(mappedBy = &quot;wishlist&quot;, cascade = CascadeType.ALL, orphanRemoval = true, fetch = FetchType.LAZY)&#10;    private List&lt;WishlistItem&gt; items;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/src/main/java/model/WishlistItem.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/main/java/model/WishlistItem.java" />
              <option name="originalContent" value="package model;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;import java.sql.Timestamp;&#10;&#10;@Data&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;\&quot;wishlistItems\&quot;&quot;)&#10;public class WishlistItem {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    private Long id;&#10;&#10;    @Column(name = &quot;addedAt&quot;)&#10;    private Timestamp addedAt;&#10;&#10;    // Relationships&#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;bookId&quot;, nullable = false)&#10;    private Book book;&#10;&#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;wishlistId&quot;, nullable = false)&#10;    private Wishlist wishlist;&#10;}" />
              <option name="updatedContent" value="package model;&#10;&#10;import jakarta.persistence.*;&#10;import lombok.AllArgsConstructor;&#10;import lombok.Data;&#10;import lombok.NoArgsConstructor;&#10;&#10;import java.sql.Timestamp;&#10;&#10;@Data&#10;@NoArgsConstructor&#10;@AllArgsConstructor&#10;@Entity&#10;@Table(name = &quot;\&quot;wishlistItems\&quot;&quot;)&#10;public class WishlistItem {&#10;&#10;    @Id&#10;    @GeneratedValue(strategy = GenerationType.IDENTITY)&#10;    @Column(name = &quot;\&quot;id\&quot;&quot;)&#10;    private Long id;&#10;&#10;    @Column(name = &quot;\&quot;addedAt\&quot;&quot;)&#10;    private Timestamp addedAt;&#10;&#10;    // Relationships&#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;\&quot;bookId\&quot;&quot;, nullable = false)&#10;    private Book book;&#10;&#10;    @ManyToOne(fetch = FetchType.LAZY)&#10;    @JoinColumn(name = &quot;\&quot;wishlistId\&quot;&quot;, nullable = false)&#10;    private Wishlist wishlist;&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>